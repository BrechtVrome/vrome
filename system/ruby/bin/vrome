#!/usr/bin/env ruby

require 'rubygems'
require 'webrick'
require 'tempfile'
require 'json'
require 'open-uri'
require 'fileutils'
require 'optparse'

$options = {port: 20000, editor: 'gvim -f'}

OptionParser.new do |opts|
  opts.banner = "Usage: vrome [options]"

  opts.on("-p port", "--port port", "Server Listen Port") do |value|
    $options[:port] = value
  end

  opts.on("-e editor", "--editor editor", "External Editor") do |value|
    $options[:editor] = value
  end
end.parse!

class VromeServer < WEBrick::HTTPServlet::AbstractServlet

  def do_POST(request, response)
    request = JSON.parse(request.body)
    status, content_type, body = self.send(request['method'].to_sym,request)

    response.status          = status
    response['Content-Type'] = content_type
    response.body            = body
    response['Content-Type'] = "text/plain"
    response['Access-Control-Allow-Origin'] = '*'
    response['Access-Control-Allow-Methods'] = 'POST'
    response['Access-Control-Allow-Headers'] = 'Content-Type, Cache-Control'
    response['Access-Control-Max-Age'] = 5
  end

  def print_messages(request)
    puts "\e[31m#{">" * 30} #{Time.now.to_s}\e[0m \n#{request["messages"]}"
    return 200, "text/plain", ""
  end

  def open_editor(request)
    puts "#{Time.now} opening editor..."

    editor = $options[:editor]
    line   = request['line'] || 0
    column = request['col'] || 0

    tmpfile = Tempfile.new('vrome_external_editor')
    tmpfile.write request['data']
    tmpfile.flush

    editor = 'gvim -f' if editor == 'gvim' # Foreground: Don't fork when starting GUI
    system("#{editor} #{tmpfile.path} -c 'call cursor(#{line}, #{column})'")
    text = File.read(tmpfile.path)

    return 200, "text/plain", text
  end

  def get_latest_version(request)
    filename = File.dirname(File.expand_path(__FILE__)) + "/../../../utils/version.txt"
    version = File.read(filename) if File.exists?(filename)
    return 200, "text/plain", version
  end

  def do_GET(request, response)
    filename = ENV['HOME'] + File::SEPARATOR + '.vromerc'
    body = File.exist?(filename) ? File.read(filename) : "" rescue ""

    response.status          = 200
    response['Content-Type'] = "text/plain"
    response.body            = body
  end
end

puts "Starting Vrome server..."

server = WEBrick::HTTPServer.new(:BindAddress => '127.0.0.1', :Port => $options[:port], :AccessLog => [
  [WEBrick::Log.new(File::NULL, 1), WEBrick::AccessLog::COMMON_LOG_FORMAT]
])
server.mount "/", VromeServer
trap(:INT) { server.shutdown }
server.start
